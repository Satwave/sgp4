// This module implements the elsetrec data type from Vallado's SGP4 code.
// 
// From SGP4.h
// #define SGP4Version  "SGP4 Version 2016-03-09"
// 
// @author aholinch

#[derive(Default)]
#[derive(Debug)]
pub struct ElsetRec {

    pub whichconst: i32,
    pub satnum: i32,
    pub epochyr: i32,
    pub epochtynumrev: i32,
    pub error: i32,
    pub operationmode: char,
    pub init: char,
    pub method: char,
    pub a: f64,
    pub altp: f64,
    pub alta: f64,
    pub epochdays: f64,
    pub jdsatepoch: f64,
    pub jdsatepoch_f: f64,
    pub nddot: f64,
    pub ndot: f64,
    pub bstar: f64,
    pub rcse: f64,
    pub inclo: f64,
    pub nodeo: f64,
    pub ecco: f64,
    pub argpo: f64,
    pub mo: f64,
    pub no_kozai: f64,
    
    // sgp4fix add new variables from tle
    pub classification: char,
    pub intldesg: String,
    pub ephtype: i32,
    pub elnum: i64,
    pub revnum: i64,
    
    // sgp4fix add unkozai'd variable
    pub no_unkozai: f64,
    
    // sgp4fix add singly averaged variables
    pub am: f64,
    pub em: f64,
    pub im: f64,
    pub o_m: f64,  // usually Om in other languages that don't care so much about snake case
    pub om: f64,
    pub mm: f64,
    pub nm: f64,
    pub t: f64,
    
    // sgp4fix add constant parameters to eliminate mutliple calls during execution
    pub tumin: f64,
    pub mu: f64,
    pub radiusearthkm: f64,
    pub xke: f64, 
    pub j2: f64,
    pub j3: f64,
    pub j4: f64,
    pub j3oj2: f64,
    
    //       Additional elements to capture relevant TLE and object information:       
    pub dia_mm: i64, // RSO dia in mm
    pub period_sec: f64, // Period in seconds
    pub active: char, // "Active S/C" flag (0=n, 1=y) 
    pub not_orbital: char, // "Orbiting S/C" flag (0=n, 1=y)  
    pub rcs_m2: f64, // "RCS (m^2)" storage  

    // temporary variables because the original authors call the same method with different variables
    pub ep: f64,
    pub inclp: f64,
    pub nodep: f64,
    pub argpp: f64,
    pub mp: f64,


    pub isimp: i32,
    pub aycof: f64,
    pub con41: f64,
    pub cc1: f64,
    pub cc4: f64,
    pub cc5: f64,
    pub d2: f64,
    pub d3: f64,
    pub d4: f64,
    pub delmo: f64,
    pub eta: f64,
    pub argpdot: f64,
    pub omgcof: f64,
    pub sinmao: f64,
    pub t2cof: f64,
    pub t3cof: f64,
    pub t4cof: f64,
    pub t5cof: f64,
    pub x1mth2: f64,
    pub x7thm1: f64,
    pub mdot: f64,
    pub nodedot: f64,
    pub xlcof: f64,
    pub xmcof: f64,
    pub nodecf: f64,

    // deep space
    pub irez: i32,
    pub d2201: f64,
    pub d2211: f64,
    pub d3210: f64,
    pub d3222: f64,
    pub d4410: f64,
    pub d4422: f64,
    pub d5220: f64,
    pub d5232: f64,
    pub d5421: f64,
    pub d5433: f64,
    pub dedt: f64,
    pub del1: f64,
    pub del2: f64,
    pub del3: f64,
    pub didt: f64,
    pub dmdt: f64,
    pub dnodt: f64,
    pub domdt: f64,
    pub e3: f64,
    pub ee2: f64,
    pub peo: f64,
    pub pgho: f64,
    pub pho: f64,
    pub pinco: f64,
    pub plo: f64,
    pub se2: f64,
    pub se3: f64,
    pub sgh2: f64,
    pub sgh3: f64,
    pub sgh4: f64,
    pub sh2: f64,
    pub sh3: f64,
    pub si2: f64,
    pub si3: f64,
    pub sl2: f64,
    pub sl3: f64,
    pub sl4: f64,
    pub gsto: f64,
    pub xfact: f64,
    pub xgh2: f64,
    pub xgh3: f64,
    pub xgh4: f64,
    pub xh2: f64,
    pub xh3: f64,
    pub xi2: f64,
    pub xi3: f64,
    pub xl2: f64,
    pub xl3: f64,
    pub xl4: f64,
    pub xlamo: f64,
    pub zmol: f64,
    pub zmos: f64,
    pub atime: f64,
    pub xli: f64,
    pub xni: f64,
    pub snodm: f64,
    pub cnodm: f64,
    pub sinim: f64,
    pub cosim: f64,
    pub sinomm: f64,
    pub cosomm: f64,
    pub day: f64,
    pub emsq: f64,
    pub gam: f64,
    pub rtemsq: f64, 
    pub s1: f64,
    pub s2: f64,
    pub s3: f64,
    pub s4: f64,
    pub s5: f64,
    pub s6: f64,
    pub s7: f64, 
    pub ss1: f64,
    pub ss2: f64,
    pub ss3: f64,
    pub ss4: f64,
    pub ss5: f64,
    pub ss6: f64,
    pub ss7: f64,
    pub sz1: f64,
    pub sz2: f64,
    pub sz3: f64,
    pub sz11: f64,
    pub sz12: f64,
    pub sz13: f64,
    pub sz21: f64,
    pub sz22: f64,
    pub sz23: f64,
    pub sz31: f64,
    pub sz32: f64,
    pub sz33: f64,
    pub z1: f64,
    pub z2: f64,
    pub z3: f64,
    pub z11: f64,
    pub z12: f64,
    pub z13: f64,
    pub z21: f64,
    pub z22: f64,
    pub z23: f64,
    pub z31: f64,
    pub z32: f64,
    pub z33: f64,
    pub argpm: f64,
    pub inclm: f64,
    pub nodem: f64,
    pub dndt: f64,
    pub eccsq: f64,
        
    // for initl
    pub ainv: f64,
    pub ao: f64,
    pub con42: f64,
    pub cosio: f64,
    pub cosio2: f64,
    pub omeosq: f64,
    pub posq: f64,
    pub rp: f64,
    pub rteosq: f64,
    pub sinio: f64
} // end struct

impl ElsetRec {
    pub fn new() -> Self {
        Self{ whichconst: super::sgp4::WGS72, ..Default::default() }
    }
}
